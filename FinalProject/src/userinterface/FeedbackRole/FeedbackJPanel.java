/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FeedbackRole;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.CustomerOrder.BuyOrderItem;
import Business.EcoSystem;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkQueue;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 13522
 */
public class FeedbackJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    EcoSystem system;
    Network net;
    UserAccount useraccount;
    /**
     * Creates new form Feekback
     */
    public FeedbackJPanel(JPanel userProcessContainer, EcoSystem system, Network net, UserAccount useraccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.net = net;
        this.useraccount = useraccount;
       
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFeedBack = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblFeedBack.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Buyer", "Seller", "Status", "Time", "Comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFeedBack);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 806, 147));

        jLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel1.setText("      FeedBacker Workarea");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, 378, -1));

        btnView.setText("Processing Oder");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 410, 170, 20));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/EBack.jpg"))); // NOI18N
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 630));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFeedBack.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning",JOptionPane.WARNING_MESSAGE);
           
        }else{

        BuyOrderItem buyOrderItem = (BuyOrderItem)tblFeedBack.getValueAt(selectedRow, 0);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.add(new ProcessingOrder1JPanel(userProcessContainer,buyOrderItem));
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFeedBack;
    // End of variables declaration//GEN-END:variables

    private void refreshTable() {
        int rowCount = tblFeedBack.getRowCount();
        DefaultTableModel model = (DefaultTableModel)tblFeedBack.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        for(Customer customer : net.getCustomerDirectory().getCustomersList()){
            
            
            for(BuyOrderItem buyorderItem : customer.getBuyOrder().getOrderItemList()){
               
                      Object row[] = new Object[6];
                row[0] = buyorderItem;
                row[1] =buyorderItem.getCustomer().getName();
                row[2]=buyorderItem.getItem().getSeller();
                row[3]=buyorderItem.getStatus();
                row[4]=buyorderItem.getCreateTime();
                row[5]=buyorderItem.getEvaluate();
                        
                
                model.addRow(row);
                
            }
        }  
    }
}
